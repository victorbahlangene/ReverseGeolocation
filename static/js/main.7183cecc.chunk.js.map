{"version":3,"sources":["ciuen.png","Header.js","Footer.js","GeocodingForm.js","ResultList.js","ResultJSON.js","ResultMap.js","GeocodingResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","Footer","id","GeocodingForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLocating","handleGeoLocation","bind","assertThisInitialized","handleInputChange","handleSubmit","onSubmit","_this2","geolocation","navigator","Promise","resolve","reject","Error","setState","getCurrentPosition","position","console","log","then","location","onChange","coords","latitude","longitude","event","target","name","value","type","checked","preventDefault","_this$props","apikey","isSubmitting","query","e","placeholder","href","onClick","disabled","ResultList","rate","response","results","remaining","limit","map","result","index","key","annotations","flag","formatted","geometry","lat","lng","ResultJSON","JSON","stringify","redIcon","L","icon","iconUrl","iconSize","iconAnchor","ResultMap","layer","data","mapNode","initMap","remove","center","zoom","tileLayer","attribution","addTo","featureGroup","i","length","marker","bindPopup","fitBounds","getBounds","prevProps","prevState","ref","node","RESULT_TAB","GeocodingResults","activeTab","title","tab","classnames","is-active","aria-hidden","renderTab","src_ResultList","src_ResultJSON_0","src_ResultMap_0","App","handleChange","opencage","q","catch","err","error","defineProperty","src_Header_0","src_GeocodingForm_0","src_GeocodingResults_0","src_Footer_0","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7183cecc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ciuen.50b3923f.png\";","// ./src/Header.js\nimport React, { Component } from \"react\";\n//import logo from './opencage-white.svg';\nimport logo from \"../src/ciuen.png\";\nimport \"./Header.css\";\n//import logo from \"../src/ciuen.png\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Capstone <b>Geocoder</b> APP\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\n/* add funtionality so the date is always current */\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"footer\">\r\n        <p>Victor Bahlangene Web Design, Copyright &copy; 2019</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport \"./GeocodingForm.css\";\n\nclass GeocodingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLocating: false\n    };\n    this.handleGeoLocation = this.handleGeoLocation.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = props.onSubmit;\n  }\n\n  handleGeoLocation() {\n    const geolocation = navigator.geolocation;\n    const p = new Promise((resolve, reject) => {\n      if (!geolocation) {\n        reject(new Error(\"Not Supported\"));\n      }\n      this.setState({\n        isLocating: true\n      });\n\n      geolocation.getCurrentPosition(\n        position => {\n          console.log(\"Location found\");\n          resolve(position);\n        },\n        () => {\n          console.log(\"Location : Permission denied\");\n          reject(new Error(\"Permission denied\"));\n        }\n      );\n    });\n    p.then(location => {\n      this.setState({\n        isLocating: false\n      });\n      this.props.onChange(\n        \"query\",\n        location.coords.latitude + \", \" + location.coords.longitude\n      );\n    });\n  }\n\n  handleInputChange(event) {\n    const { target } = event;\n    const { name } = target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    // console.log(name, value);\n    // this.setState({\n    //   [name]: value,\n    // });\n    this.props.onChange(name, value);\n  }\n\n  handleSubmit(event) {\n    console.log(\"Form was submitted with state: \", this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    const { apikey, isSubmitting, query } = this.props;\n    const { isLocating } = this.state;\n    return (\n      <div className=\"box form\">\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n          }}\n        >\n          {/* <!-- API KEY --> */}\n          <div className=\"field\">\n            <label className=\"label\">API key</label>\n            <p>(94904836a847430ba775392ea45b1871)</p>\n            <div className=\"control has-icons-left\">\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-lock\" />\n              </span>\n              <input\n                name=\"apikey\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"YOUR-API-KEY\"\n                value={apikey}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"help\">\n              Your OpenCage Geocoder API Key (\n              <a href=\"https://opencagedata.com/users/sign_up\">register</a>\n              ).\n            </div>\n          </div>\n          {/* <!-- ./API KEY --> */}\n          {/* <!-- Query --> */}\n          <div className=\"field\">\n            <label className=\"label\">Address or Coordinates</label>\n            <div className=\"control has-icons-left\">\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-map-marked-alt\" />\n              </span>\n              <input\n                name=\"query\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"location\"\n                value={query}\n                onChange={this.handleInputChange}\n              />\n              <div className=\"help\">\n                Address, place name\n                <br />\n                Coordinates as <code>latitude, longitude</code> or{\" \"}\n                <code>y, x</code>.\n              </div>\n            </div>\n          </div>\n          {/* <!-- ./Query --> */}\n\n          <div className=\"field\">\n            <label className=\"label\">Show my location</label>\n            <div className=\"control\" onClick={this.handleGeoLocation}>\n              {!isLocating && (\n                <button className=\"button is-static\">\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-location-arrow\" />\n                  </span>\n                </button>\n              )}\n              {isLocating && (\n                <button className=\"button is-static\">\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-spinner fa-pulse\" />\n                  </span>\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* <!-- Button Geocode --> */}\n          <button\n            className=\"button is-success\"\n            onClick={this.handleSubmit}\n            disabled={isLocating || isSubmitting}\n          >\n            Geocode\n          </button>\n          {/* <!-- ./Button Geocode --> */}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default GeocodingForm;\n","import React, { Component } from 'react';\n\nclass ResultList extends Component {\n  render() {\n    const rate = this.props.response.rate || {};\n    const results = this.props.response.results || [];\n\n    return (\n      <article className=\"message\">\n        <div className=\"message-body\">\n          <p>\n            Remaining {rate.remaining} out of {rate.limit} requests\n          </p>\n          <p>&nbsp;</p>\n          <ol>\n            {results.map((result, index) => {\n              return (\n                <li key={index}>\n                  {result.annotations.flag} {result.formatted}\n                  <br />\n                  <code>\n                    {result.geometry.lat} {result.geometry.lng}\n                  </code>\n                </li>\n              );\n            })}\n          </ol>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default ResultList;\n","import React, { Component } from 'react';\n\nimport './ResultJSON.css';\n\nclass ResultJSON extends Component {\n  render() {\n    return (\n      <article className=\"message\">\n        <div className=\"message-body\">\n          <pre>{JSON.stringify(this.props.response, null, 2)}</pre>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default ResultJSON;\n","import React, { Component } from 'react';\nimport L from 'leaflet';\n// import Leaflet's CSS\nimport 'leaflet/dist/leaflet.css';\nimport './ResultMap.css';\n\nconst redIcon = L.icon({\n  iconUrl: 'marker-icon-red.png',\n  iconSize: [25, 41], // size of the icon\n  iconAnchor: [12, 40], // point of the icon which will correspond to marker's location\n});\n\nclass ResultMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      layer: null,\n      data: props.response.results,\n    };\n    this.mapNode = null;\n  }\n  componentDidMount() {\n    // create the Leaflet map object\n    if (!this.state.map) {\n      this.initMap();\n    }\n  }\n  componentWillUnmount() {\n    // destroys the Leaflet map object & related event listeners\n    this.state.map.remove();\n  }\n  initMap() {\n    if (this.state.map) return;\n\n    // creates the Leaflet map object\n    // it is called after the Map component mounts\n    const map = L.map(this.mapNode, {\n      center: [45, 2],\n      zoom: 4,\n    });\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map);\n\n    const layer = L.featureGroup().addTo(map);\n\n    const { results } = this.props.response;\n    for (let i = 0; i < results.length; i++) {\n      const marker = L.marker(results[i].geometry, { icon: redIcon });\n      marker.addTo(layer).bindPopup(i + 1 + ' - ' + results[i].formatted);\n    }\n\n    map.fitBounds(layer.getBounds());\n\n    // set the state\n    this.setState({ map, layer });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevState.data !== this.props.response.results) {\n    //   const { results } = this.props.response;\n    //   if (results && results.length > 0) {\n    //     const { layer } = this.state;\n    //     if (layer) {\n    //       // const redIcon = new RedIcon();\n    //       layer.clearLayers();\n    //       for (let i = 0; i < results.length; i++) {\n    //         const marker = L.marker(results[i].geometry, { icon: redIcon });\n    //         marker.addTo(layer);\n    //       }\n    //       this.state.map.fitBounds(layer.getBounds());\n    //     }\n    //   }\n    // }\n  }\n\n  render() {\n    // const results = this.props.response.results || [];\n\n    return (\n      <div\n        ref={node => (this.mapNode = node)}\n        id=\"map\"\n        data={this.props.data}\n      />\n    );\n  }\n}\n\nexport default ResultMap;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport ResultList from './ResultList';\nimport ResultJSON from './ResultJSON';\nimport ResultMap from './ResultMap';\n\nimport './GeocodingResults.css';\n\nconst RESULT_TAB = 'RESULT_TAB';\nconst MAP_TAB = 'MAP_TAB';\nconst JSON_TAB = 'JSON_TAB';\n\nclass GeocodingResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: RESULT_TAB,\n    };\n  }\n\n  renderTab(title, tab, icon, activeTab) {\n    return (\n      <li className={classnames({ 'is-active': activeTab === tab })}>\n        <a\n          href=\"/\"\n          onClick={e => {\n            e.preventDefault();\n            this.setState({\n              activeTab: tab,\n            });\n          }}\n        >\n          <span className=\"icon is-small\">\n            <i className={icon} aria-hidden=\"true\" />\n          </span>\n          <span>{title}</span>\n        </a>\n      </li>\n    );\n  }\n\n  render() {\n    const { activeTab } = this.state;\n    const results = this.props.response.results || [];\n\n    return (\n      <div className=\"box results\">\n        <div className=\"tabs is-boxed vh\">\n          <ul>\n            {this.renderTab('Results', RESULT_TAB, 'fas fa-list-ul', activeTab)}\n            {results.length > 0 &&\n              this.renderTab(\n                'Map',\n                MAP_TAB,\n                'fas fa-globe-americas',\n                activeTab\n              )}\n            {results.length > 0 &&\n              this.renderTab('JSON Result', JSON_TAB, 'fab fa-js', activeTab)}\n          </ul>\n        </div>\n\n        {/* List of results */}\n        {activeTab === RESULT_TAB &&\n          results.length > 0 && <ResultList response={this.props.response} />}\n        {/* JSON result */}\n        {activeTab === JSON_TAB &&\n          results.length > 0 && <ResultJSON response={this.props.response} />}\n        {/* MAP result */}\n        {activeTab === MAP_TAB &&\n          results.length > 0 && <ResultMap response={this.props.response} />}\n      </div>\n    );\n  }\n}\n\nexport default GeocodingResults;\n","import React, { Component } from \"react\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nimport GeocodingForm from \"./GeocodingForm\";\nimport GeocodingResults from \"./GeocodingResults\";\n\nimport * as opencage from \"opencage-api-client\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      apikey: \"\",\n      isSubmitting: false,\n      response: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    opencage\n      .geocode({ key: this.state.apikey, q: this.state.query })\n      .then(response => {\n        console.log(response);\n        this.setState({ response, isSubmitting: false });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({ response: {}, isSubmitting: false });\n      });\n  }\n\n  handleChange(key, value) {\n    this.setState({ [key]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <div className=\"columns\">\n          <div className=\"column is-one-third-desktop\">\n            <GeocodingForm\n              apikey={this.state.apikey}\n              query={this.state.query}\n              isSubmitting={this.state.isSubmitting}\n              onSubmit={this.handleSubmit}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"column\">\n            <GeocodingResults response={this.state.response} />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}